// --- src/middleware/isAdmin.ts (–ê–î–ú–ò–ù-–ë–û–¢) ---
import { Context } from "telegraf";
// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ê–î–ú–ò–ù-–ë–û–¢–ê, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö ID
// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π (–º–æ–∂–µ—Ç –±—ã—Ç—å '../config' –∏–ª–∏ '@/config')
import { config } from '../config'
/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω-–±–æ—Ç–∞.
 * –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –¥–∞–ª—å—à–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ ctx.from.id –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ config.adminBotUserIds.
 */
export const isAdmin = async (ctx: Context, next: () => Promise<void>) => {
  const userId = ctx.from?.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—Ö–æ–¥–∏—Ç –ª–∏ –æ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
  if (userId && config.adminBotUserIds.includes(userId)) {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É (–∫–æ–º–∞–Ω–¥–µ)
    // console.log(`[Admin Bot Auth] User ${userId} authorized.`); // –õ–æ–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)
    return next();
  } else {
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    console.warn(
      `[Admin Bot Auth] Unauthorized access attempt by user ${
        userId || "unknown ID"
      }.`
    );
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –≤ –¥–æ—Å—Ç—É–ø–µ
    await ctx.reply(
      "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã."
    );
    // –ù–ï –≤—ã–∑—ã–≤–∞–µ–º next(), —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è
  }
};
